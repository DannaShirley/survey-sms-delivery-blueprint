---
title: Send Web-Based Surveys by SMS
author: dave.gussin
indextype: blueprint
icon: blueprint
image: images/flowchart.png
category: 6
summary: This Genesys Cloud Developer Blueprint explains how to configure Genesys Cloud to deliver a web-based survey via SMS to a customer’s mobile phone number. The process explained in this blueprint uses a Policy to trigger a Survey Invite Flow that uses a Data Action to send the intended recipient the survey URL to their cell phone via SMS.
---
## Scenario
You want to offer your customers the option of receiving an SMS for a web-based survey rather than to their email address.

## Solution
When a customer interaction completes, a Policy is evaluated to determine if that interaction (across any channel) should be surveyed using any required combination of matching criteria. The Policy is configured with standard Survey options including the selection of a Survey Invite Flow. The Survey invite Flow performs the following main steps:
* Validates if the corresponding External Contact record exists and that it contains a cell phone number (and optionally a first name).
* Confirms that the External Contact has not opted out of receiving surveys
* Sends the customer an SMS with a survey invitation message and the URL to the survey.
* Executes the Complete Survey action with a Target Email Address set to a fake Genesys Cloud email address whose sole purpose is to allow the system to believe the survey email has been sent in order to activate the survey.
The following flowchart shows the process:

![Survey SMS Delivery flowchart](images/flowchart.png)
 
## Contents 

* [Solution components](#solution-components "Goes to the Solutions components section")
* [Prerequisites](#prerequisites "Goes to the Prerequisites section")
* [Implementation steps](#implementation-steps "Goes to the Implementation steps section")
* [Additional resources](#additional-resources "Goes to the Additional resources section")

## Solution Components

* **Genesys Cloud** - A suite of Genesys cloud services for enterprise-grade communications, collaboration, and contact center management. In this solution, you configure Policies, Survey forms, SMS numbers, Email addresses, DID numbers, Call routes, Flows, Queues, and Data actions in Genesys Cloud.
* **Archy** - A Genesys Cloud command-line tool for building and managing Architect flows.
* **CX as Code** - A Genesys Cloud Terraform provider that provides a command line interface for declaring core Genesys Cloud objects.

## Prerequisites

### Specialized Knowledge

* Administrator-level knowledge of Genesys Cloud
* Experience designing Architect flows
* Experience using data actions
* Experience configuring surveys
* Experience using Terraform
* Experience using Archy

### Genesys Cloud Configuration

* Genesys Cloud 3+ license - For more information, see Genesys Cloud Pricing.
* (Recommended) The role of Master Admin - For more information, see the Roles and permissions overview
* Genesys Cloud OAuth Client - Required for the Integration leveraged by the Data Action that sends the Agentless Outbound SMS
* Genesys Cloud Architect flow - A pre-existing flow that routes customer interactions to a queue to be handled by an agent is required.
* Genesys Cloud Queue - The queue used in the aforementioned Architect flow for customer interactions.  The media retention policy will trigger the Survey Invite flow when customer interactions routed to this queue are closed.
* Genesys Cloud Call route - A route which assigns an inbound number to the aforementioned Architect flow.

### Development tools running in your local environment

- Terraform (the latest binary). For more information, see [Download Terraform](https://www.terraform.io/downloads.html "Opens the Download Terraform page") in the Terraform website.
- Archy. For more information, see [Archy Installation](https://developer.genesys.cloud/devapps/archy/install "Opens the Archy Installation page") 

### Preliminary Considerations

Before you start sending surveys by SMS, consider the following points:

#### Incremental SMS Messaging Costs

Because surveys are delivered by SMS you will incur an incremental usage cost for each message sent to customers soliciting their feedback. For more information, see About SMS messaging.

#### Survey Invitation Messages

Canned Responses cannot be used to provide survey invitation templates because the 
Get Response action in an Email Flow returns a message in HTML format which is incompatible with SMS messages. As a result, the survey invitation message must either be statically set in the Survey Invite Flow or it must come from another source like a Data Table or an external system via a Data Action.

#### Survey Reminders

Because surveys are delivered by SMS you will not be able to leverage the built-in survey reminder feature since it relies on the survey being delivered by email in the first place.

#### SMS Rate Limits

There are fixed rate limits for outbound SMS messages. Please see the following Developer Center article for more information: https://developer.genesys.cloud/api/rest/v2/organization/limits#messaging 

## Implementation Steps

###	Create an SMS number for delivering surveys

Create an SMS number on behalf of which you will be delivering surveys to your customers. You may use an existing SMS number that you have already purchased, and the SMS number can be a long code or a short code. Navigate to the Message > SMS Number Inventory workspace to procure an SMS number. Write down this number as you’ll need it later when you configure the Email Flow in step #5.
For more information, see About SMS messaging.

### Create an email domain

If you already have an email domain configured in Genesys Cloud, then you may skip this section; but make a note of the domain name and any existing email addresses you have configured. If you do not already have an email domain configured in Genesys Cloud, then configure a new one:
a.	Navigate to Contact Center > Email
b.	Click the Add Domain button
c.	For Domain Type, select Genesys Cloud
d.	For Domain name, type the name of your domain (e.g., your company name, your Genesys Cloud Org name, etc.)
e.	Click Save

**Note:** It is not necessary to create an Email Address. 

### Add the tester to External Contacts

If the tester is already an external contact in Genesys Cloud, you may skip this section.
a.  Navigate to Directory > External Contacts
b.  Click the Add button.
c.  Select "Contact" from the dropdown.
d.  Enter the tester's name and continue.
e.  Enter the tester's contact information including cell phone number and save.

**Note:** If the tester is already an external contact, make sure that the "Opt out of surveys" option is not selected in the tester's contact information.

### Define the environment variables

First define the environment variables that hold the OAuth credential grant that is used by CX as Code to provision the Genesys Cloud objects.

- `GENESYSCLOUD_OAUTHCLIENT_ID` - This is the Genesys Cloud client credential grant Id that CX as Code executes against.
- `GENESYSCLOUD_OAUTHCLIENT_SECRET` - This is the Genesys Cloud client credential secret that CX as Code executes against.
- `GENESYSCLOUD_REGION` - This is the Genesys Cloud region in which your organization is located.
- `GENESYSCLOUD_ARCHY_LOCATION` - The location for the organization (e.g mypurecloud.com)

### Clone the repo

Clone the [survey-sms-delivery-blueprint](https://github.com/GenesysCloudBlueprints/architect-flow-public-api-blueprint "Opens the project repository on GitHub") repository on GitHub.

### Configure the Terraform module

1. Update `terraform/terraform.tfvars` with the same client credentials used for the environment variables.

```
client_id = "<your-client-id>"
client_secret = "<your-client-secret"
```

2. Update the queue name in `terraform/modules/media-retention-policies/main.tf` to match the queue you will test the solution with.

```hcl
data "genesyscloud_routing_queue" "queue" {
    name = "<your-queue-name>"
}
```

3. Update the email domain in `terraform/modules/media-retention-policies/main.tf`

```hcl
resource "genesyscloud_recording_media_retention_policy" "sendsurvey_policy" {
    .
    .
    .
    media_policies {
        call_policy {
            actions {
                .
                .
                .
                assign_surveys {
                    sending_domain = "<your-email-domain>"
.
.
.
```

4. Update the customer greeting of the survey invite in `terraform/SendSurvey_v1-0.yaml`.

```yaml
.
.
.
- updateData:
    name: Create manual survey message
    statements:
      - string:
          variable: State.surveyMessage
          value:
            exp: "Append(\"<your-customer-greeting>\")"
.
.
.
```

5. If you opt to change the integration name or data action name in `terraform/modules/data-actions/main.tf`, you will need to update them in the `terraform/SendSurvey_v1-0.yaml` file as well.

`terraform/modules/data-actions/main.tf`
```hcl
module "integration" {
    source = "git::https://github.com/GenesysCloudDevOps/public-api-data-actions-integration-module.git?ref=main"
    integration_name                = "<your-integration-name>"
.
.
.
```

```hcl
resource "genesyscloud_integration_action" "action" {
    name = "<your-data-action-name>"
.
.
.
```

`terraform/SendSurvey_v1-0.yaml`
```yaml
.
.
.
- callData:
    name: Call Data Action
    category:
      <your-integration-name>:
        dataAction:
          <your-data-action-name>:
.
.
.

```

### Deploy

Deploy the Architect flow and Genesys Cloud objects

From the directory containing `main.tf` and `SendSurvey_v1-0.yaml`, run:

```console
$ terraform init
$ terraform apply --auto-approve
```

## Test your flow

Have the tester dial the DID phone number assigned to the Architect flow outlined in the [Genesys Cloud Configuration](#genesys-cloud-configuration) section. After the call is transfered to an agent and the call is ended, the tester should receive an SMS message with the survey invitation.
**Note:** As the tester, it may be convenient to act as both the customer and agent in this scenario.  

## Additional resources
* [terraform.io](https://terraform.io "Opens www.terraform.io") 
* [CX as Code](https://developer.genesys.cloud/api/rest/CX-as-Code/ "Opens the CX as Code page in the dev center") 
* [Genesys Cloud provider documentation](https://registry.terraform.io/providers/MyPureCloud/genesyscloud/latest/docs "Opens the Genesys Cloud provider docs on registry.terraform.io") 
* [Archy](https://developer.genesys.cloud/devapps/archy/ "Opens the Archy documentation in the dev center") 
* ["Deploy a simple IVR using Terraform, CX as Code, and Archy"](https://developer.genesys.cloud/blueprints/simple-ivr-deploy-with-cx-as-code-blueprint/ "Opens a blueprint on the dev center") - A blueprint that describes provisioning the resources needed for an IVR flow using CX as Code and the deployment phases of those Genesys Cloud objects. 
* [Architect overview in the Genesys Cloud Resource Center](https://help.mypurecloud.com/articles/architect-overview/)
* [About web surveys in the Genesys Cloud Resource Center](https://help.mypurecloud.com/articles/about-web-surveys/)
* [Select the email domain and add email addresses in the Genesys Cloud Resource Center](https://help.mypurecloud.com/articles/manage-acd-email-routing/)
* [About the Genesys Cloud data actions integration in the Genesys Cloud Resource Center](https://help.mypurecloud.com/articles/about-genesys-cloud-data-actions-integration/)
* The [survey-sms-delivery-blueprint](https://github.com/GenesysCloudBlueprints/survey-sms-delivery-blueprint "Opens the project repository on GitHub") repository on GitHub
